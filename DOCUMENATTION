SHL GenAI Assessment Recommendation ‚Äì Solution Overview
Objective:
To build a web-based tool that recommends the most suitable assessments from a product catalog (CSV file) based on a user‚Äôs query using Retrieval-Augmented Generation (RAG)-like logic.

üõ†Ô∏è Tech Stack:
Backend: FastAPI (Python)

Frontend: Streamlit (Python)

Data: assessment_data.csv (predefined product catalog)

Model/Logic: Simple keyword-matching mimicking RAG logic

Deployment: Localhost, but can be deployed to Hugging Face Spaces, Render, or Vercel

How it Works:
CSV Data: A structured file assessment_data.csv is used which contains:

CandidateID

Education

ExperienceYears

Skills

Industry

Recommended_Assessment

Backend (FastAPI):

/search?query=<text> is exposed as an API endpoint.

When the endpoint receives a query (e.g., "Java developer for 40 minutes"), it:

Converts the query to lowercase.

Matches it against the values in the Skills, Education, and Industry columns.

Returns all unique Recommended_Assessment values that match.

Frontend (Streamlit):

Accepts user input in a text box.

Sends the query to the FastAPI endpoint.

Displays recommendations received from the backend in a clean, interactive UI.

Example Output:
Input Query:

I am hiring for Java developers who can collaborate with business teams.

API Output:

json
Copy
Edit
{
  "recommendations": [
    "Java Core Assessment",
    "Business Collaboration Skills"
  ]
}

NOTE THAT I AM NOT ABLE TO PERFORM ANY OPERATIONS AS I AM NOT HAVING ACCESS TO PAID VERSION OF GEMINI.

Project Links:
Webapp URL: http://localhost:8501

API Endpoint: http://localhost:8000/search?query=Looking+for+Java+developer+assessment

GitHub Repo: [Link to GitHub Repository]

1-Page Doc: [Link to this document in PDF/Google Doc format]
